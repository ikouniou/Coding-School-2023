@page "/transactionlist/edit/{Id:int?}"
@using PetShop.Model
@using PetShop.Web.Blazor.Shared.Transaction

@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>TransactionEdit</h3>

@if (Transaction == null)
{
    <p>Loading...</p>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <label class="form-label">Date</label>
            <input class="form-control" @bind="@Transaction.Date" />
        </div>
        <div class="col-md-6">
            <label class="form-label">PetPrice</label>
            <input class="form-control" @bind="@Transaction.PetPrice" />
        </div>
        <div class="col-md-6">
            <label class="form-label">PetFoodQty</label>
            <input class="form-control" @bind="@Transaction.PetFoodQty" />
        </div>
        <div class="col-md-6">
            <label class="form-label">PetFoodPrice</label>
            <input class="form-control" @bind="@Transaction.PetFoodPrice" />
        </div>
        <div class="col-md-6">
            <label class="form-label">TotalCost</label>
            <input class="form-control" @bind="@Transaction.TotalCost" />
        </div>
    </div>

   <div class="row mt-2">
       <div class="col">
           <button class="btn btn-success" @onclick="OnSave">Save</button>
           <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
       </div>
   </div>
}

@code {
    [Parameter] public int? Id { get; set; }
    TransactionEditDto Transaction { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
        {
            Transaction = new();
        }
        else
        {
            Transaction = await httpClient.GetFromJsonAsync<TransactionEditDto>($"transaction/{Id}");
        }
    }
    private void OnCancel()
    {
        navigationManager.NavigateTo("transactionlist");
    }
    private async Task OnSave()
    {
        HttpResponseMessage? response = null;
        if (Id == null)
        {
            response = await httpClient.PostAsJsonAsync("transaction", Transaction);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("transaction", Transaction);
        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("transactionlist");
    }
}