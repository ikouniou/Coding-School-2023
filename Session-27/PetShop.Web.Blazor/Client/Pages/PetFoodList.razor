@page "/petfoodlist"
@using PetShop.Web.Blazor.Shared.Pet;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime

<h3>Pet Food List</h3>

@if (isLoading) {
    <p>Loading ...</p>
} else {
    <button class="btn btn-primary" @onclick="CreateItem">Create</button>

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Animal Typy</th>
                <th>Price</th>
                <th>Cost</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var petFood in petFoodList) {
                <tr>
                    <td>@petFood.AnimalType</td>
                    <td>@petFood.Price</td>
                    <td>@petFood.Cost</td>
                    <td>
                        <button class="btn btn-primary" @onclick="()=> EditItem(petFood)">Edit</button>
                        <button class="btn btn-danger" @onclick="()=> DeleteItem(petFood)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<PetFoodListDto> petFoodList = new();
    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync() {
        await LoadItemsFromServer();
        isLoading = false;
    }

    private async Task LoadItemsFromServer() {
        petFoodList = await httpClient.GetFromJsonAsync<List<PetFoodListDto>>("petfood");
    }

    private void CreateItem() {
        navigationManager.NavigateTo("petfoodlist/edit");
    }

    private void EditItem(PetFoodListDto petFood) {
        navigationManager.NavigateTo($"petfoodlist/edit/{petFood.Id}");
    }

    private async Task DeleteItem(PetFoodListDto petFood) {
        var confirm = await jsRuntime.InvokeAsync<bool>("confirm", "Delete Item. Are you sure?");
        if (confirm) {
            var response = await httpClient.DeleteAsync($"petfood/{petFood.Id}");
            response.EnsureSuccessStatusCode();
            await LoadItemsFromServer();
        }
    }
}
