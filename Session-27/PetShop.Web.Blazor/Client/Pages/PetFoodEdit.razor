@page "/petfoodlist/edit/{Id:int?}"
@using PetShop.Model.Enums;
@using PetShop.Web.Blazor.Shared.PetFood;
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>@title</h3>

@if (PetFood == null) {
	<p>Loading ...</p>
} else {
	<div class="row">
		<div class="col-md-6">
			<label class="form-label">Animal Type</label>
			<select class="form-control" @bind="PetFood.AnimalType">

				@foreach (var enumValue in Enum.GetValues<AnimalType>()) {
					<option value="@enumValue">@enumValue</option>
				}

			</select>
		</div>
		<div class="row">
			<div class="col-md-6">
				<label class="form-label">Price</label>
				<input class="form-control" @bind="@PetFood.Price" />
			</div>
		</div>
		<div class="row">
			<div class="col-md-6">
				<label class="form-label">Cost</label>
				<input class="form-control" @bind="@PetFood.Cost" />
			</div>
		</div>


	</div>

	<div class="row mt-2">
		<div class="col">
			<button class="btn btn-success" @onclick="OnSave">Save</button>
			<button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
		</div>

	</div>
}

@code {
	[Parameter] public int? Id { get; set; }
	PetFoodEditDto PetFood { get; set; }
	string? title;

	protected override async Task OnInitializedAsync() {
		if (Id == null) {
			PetFood = new();
			title = "Create Pet Food";
		} else {
			PetFood = await httpClient.GetFromJsonAsync<PetFoodEditDto>($"petfood/{Id}");
			title = "Edit Pet Food";
		}
	}

	private void OnCancel() {
		navigationManager.NavigateTo("petfoodlist");
	}

	private async Task OnSave() {
		HttpResponseMessage? response = null;
		if (Id == null) {
			response = await httpClient.PostAsJsonAsync("petfood", PetFood);
		} else {
			response = await httpClient.PutAsJsonAsync("petfood", PetFood);
		}

		response.EnsureSuccessStatusCode();
		navigationManager.NavigateTo("petfoodlist");
	}
}
