@page "/employeelist/edit/{Id:int?}"
@using PetShop.Model;
@using PetShop.Model.Enums;
@using PetShop.Web.Blazor.Shared.Employee;
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>@title</h3>

@if (Employee == null) {
	<LoadingSpinner Type="LoadingSpinnerType.Border"/>
} else {
	<div class="row">
		<div class="col-md-6">
			<label class="form-label">Name</label>
			<input class="form-control" @bind="@Employee.Name" />
		</div>
	</div>
	<div class="row">
		<div class="col-md-6">
			<label class="form-label">Surname</label>
			<input class="form-control" @bind="@Employee.Surname" />
		</div>
	</div>
	<div class="row">
		<div class="col-md-6">
			<label class="form-label">Employee Type</label>
			<select class="form-control" @bind="Employee.EmployeeType">
				@foreach (var enumValue in Enum.GetValues<EmployeeType>()) {
					<option value="@enumValue">@enumValue</option>
				}
			</select>
		</div>
	</div>
	<div class="row">
		<div class="col-md-6">
			<label class="form-label">Salary Per Month</label>
			<input class="form-control" @bind="@Employee.SalaryPerMonth" />
		</div>
	</div>
	<div class="row mt-2">
		<div class="col">
			<button class="btn btn-success" @onclick="OnSave">Save</button>
			<button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
		</div>
	</div>

}

@code {
	[Parameter] public int? Id { get; set; }
	EmployeeEditDto Employee { get; set; }
	string? title;
	protected override async Task OnInitializedAsync() {
		if (Id == null) {
			Employee = new();
			title = "Create Employee";
		} else {
			Employee = await httpClient.GetFromJsonAsync<EmployeeEditDto>($"employee/{Id}");
			title = "Edit Employee";
		}
	}

	private void OnCancel() {
		navigationManager.NavigateTo("employeelist");
	}

	private async Task OnSave() {
		HttpResponseMessage? response = null;
		if (Id == null) {
			response = await httpClient.PostAsJsonAsync("employee", Employee);
		} else {
			response = await httpClient.PutAsJsonAsync("employee", Employee);
		}

		response.EnsureSuccessStatusCode();
		navigationManager.NavigateTo("employeelist");
	}
}
